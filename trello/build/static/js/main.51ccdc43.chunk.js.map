{"version":3,"sources":["styles/app.module.scss","store/boards/types.ts","components/Header/Link.tsx","components/Login/Login.tsx","store/boards/reducer.ts","store/service/types.ts","store/boards/selectors.ts","utils/redux.ts","utils/createUrl.ts","store/service/reducer.ts","store/service/actions.ts","store/auth/types.ts","store/auth/reducer.ts","store/userProfile/types.ts","store/auth/actions.ts","store/auth/selectors.ts","store/router/actions.ts","store/router/index.ts","store/auth/middlewere.ts","utils/storages.ts","store/service/middlewere.ts","store/boards/middleware.ts","store/boards/actions.ts","components/Board/Board.tsx","components/Dashboard/Dashboard.tsx","components/NotFound/NotFound.tsx","store/userProfile/reducer.ts","store/cards/types.ts","store/userProfile/actions.ts","store/userProfile/selectors.ts","store/userProfile/middleware.ts","components/UserPage/UserPage.tsx","store/lists/types.ts","store/cards/reducer.ts","store/cards/selectors.ts","store/cards/middleware.ts","store/cards/actions.ts","store/lists/reducer.ts","components/App/routes.tsx","store/lists/selectors.ts","store/lists/middleware.ts","store/lists/actions.ts","components/AddCardForm/AddCardFrom.tsx","components/Card/Card.tsx","components/BoardDetails/BoardDetails.tsx","store/counter/types.ts","components/Header/Header.tsx","components/OAuth/OAuth.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/App/App.tsx","store/counter/reducer.ts","store/initialization/types.ts","store/initialization/reducer.ts","store/initialization/middlewares.ts","store/initialization/actions.ts","store/index.ts","index.tsx","styles/boardDetails.module.scss"],"names":["module","exports","ACTION_TYPES","Link","title","path","to","className","styles","link","process","REACT_APP_APY_KEY","REACT_APP_APP_NAME","REACT_APP_REDIRECT_URL","REACT_APP_SCOPE","Login","requestUrl","login","login_link","href","React","INITIAL_STATE","boardsList","boardsReducer","state","type","payload","SET_BOARDS","getBoards","boards","subscribe","actionType","worker","next","dispatch","getState","action","indexOf","REACT_APP_URL","createUrl","authRequired","token","url","serviceReducer","request","p","REQUEST","authReducer","SET_TOKEN","setToken","getToken","auth","isAuthenticated","navigate","LOCATION_CHANGE","location","pathname","history","connectRouter","APP_TOKEN","setTokenWorker","key","data","window","localStorage","setItem","ROUTES_URLS","DASHBOARD","readTokenWorker","getItem","logOutWorker","HOME","authMiddlewares","READ_TOKEN","LOGOUT","requestWorker","a","method","onSuccess","appState","options","headers","Accept","fetch","response","status","console","log","json","serviceMiddleware","fetchBoardsWorker","setBoards","onError","error","boardsMiddleware","DATA_BOARD","Board","name","id","prefs","boardStyles","backgroundColor","BOARD_DETAILS","board","style","DashBoard","this","props","boardWrapp","map","item","ConnectDashboard","connect","NotFound","userParam","userReducer","SET_USER_PROFILE","setUserProfile","getUser","user","getUserUrl","fetchDataUser","ok","Error","userProfileMiddleware","GET_USER_PROFILE","UserPage","UserParam","fullName","initials","username","ConnectUser","cards","cardsReducer","SET_CARDS","SUCCESS_ADDED_CARD","newItem","idList","uuidv4","SUCCESS_DELETE_CARD","filter","el","getCards","fetchCardsWorker","setCards","deleteCardWorker","req","successDeletedCard","addCardWorker","requestOptions","body","JSON","stringify","then","successAddedCard","cardsMiddleware","DATA_CARDS","ADD_CARD","DELETE_CARD","lists","listsReducer","SET_LISTS","getLists","fetchListsWorker","setLists","listsMiddleware","DATALISTS","AddCardForm","activeForm","onFormChange","setState","onChange","e","target","value","onSubmitForm","preventDefault","handleSubmit","form","onSubmit","textarea","placeholder","btnWrapper","submitBtn","onClick","closeBtn","addCardBtn","Component","Card","dataCard","onDelete","card","deleteBtn","BoardDetails","deleteCard","addCard","match","params","boardDetails","wrapper","list","text","ConnectLists","getDataLists","getDataCards","routes","LOGIN","render","isHidden","isProtected","USER_PAGE","exact","NOT_FOUND","ConnectedHeader","undefined","onLogOut","header","i","ConnectedOAuth","onSetToken","hash","split","ConnectedRoute","rest","routeCompProps","from","userProfile","App","renderRoute","route","main","OAUTH","renderContent","count","redu","INCREASE_COUNT","DECREASE_COUNT","initWorker","START","END","initMiddleware","INIT","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createBrowserHistory","store","rootReducer","combineReducers","router","counter","service","createStore","applyMiddleware","configureStore","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.51ccdc43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app_header__2OBdT\",\"link\":\"app_link__2n1PQ\",\"main\":\"app_main__7a6I2\",\"login\":\"app_login__20Xd6\",\"login_link\":\"app_login_link__297kD\"};","export enum ACTION_TYPES {\r\n    DATA_BOARD=\"@@BOARDS/DATA_BOARDS\",\r\n    SET_BOARDS= \"@@BOARDS/SET_BOARDS\"\r\n}","import React, { FunctionComponent } from \"react\";\r\nimport { Link as RouteLink } from 'react-router-dom';\r\nimport styles from '../../styles/app.module.scss';\r\n\r\n\r\ninterface Props {\r\n  title?: string;\r\n  path: string;\r\n}\r\n\r\nexport const Link: FunctionComponent<Props> = ({ title, path }: Props) => {\r\n  return <RouteLink to={path} className={styles.link}>\r\n    {title}\r\n  </RouteLink>;\r\n};","import * as React from 'react';\r\nimport { getFromLocalStorage, setToLocalStorage } from '../../utils';\r\nimport styles from '../../styles/app.module.scss';\r\nconst {REACT_APP_APY_KEY, \r\n        REACT_APP_APP_NAME, \r\n        REACT_APP_REDIRECT_URL, \r\n        REACT_APP_SCOPE} = process.env\r\n\r\nexport class Login extends React.Component {\r\n    render() {\r\n        const requestUrl = `https://trello.com/1/authorize?return_url=${REACT_APP_REDIRECT_URL}&expiration=1day&name=${REACT_APP_APP_NAME}&scope=${REACT_APP_SCOPE}&response_type=token&key=${REACT_APP_APY_KEY}`\r\n        return  <div className={styles.login}>\r\n            <a className={styles.login_link} href={requestUrl}>Login with trello</a>\r\n        </div>\r\n    }\r\n}","import { ACTION_TYPES } from './types';\r\n\r\nexport interface BoardsState {\r\n  boardsList: Array<any>;\r\n}\r\nconst INITIAL_STATE = {\r\n  boardsList: []\r\n};\r\n\r\n\r\n\r\nconst boardsReducer = (state: BoardsState = INITIAL_STATE, { type, payload }: any) => {\r\n  switch (type) {\r\n    case ACTION_TYPES.SET_BOARDS:\r\n      return { ...state, boardsList: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardsReducer","import { Action } from \"../types\";\r\n\r\nexport interface RequestPayload<P = any> {\r\n    path: string;\r\n    method?: string,\r\n    authRequired?: boolean;\r\n    onSuccess?: (p?: P) => void;\r\n    onError?: (e?: any) => void;\r\n}\r\n\r\nexport enum ACTION_TYPES {\r\n    REQUEST = '@@SERVICE/REQUEST',\r\n    SUCCESS='@@SERVICE/SUCCESS',\r\n    ERROR='@@SERVICE/ERROR'\r\n}\r\n\r\nexport interface ActionService<P = any> \r\nextends Action<ACTION_TYPES>, RequestPayload<P> {}\r\n\r\n","import { AppState } from \"..\";\r\n\r\nexport const getBoards = (state: AppState) : Array<any> => state.boards.boardsList\r\n","export type Worker<T extends { type: string }> = (param: {\r\n    action: T;\r\n    next: any;\r\n    dispatch?: any;\r\n    getState?: () => any;\r\n  }) => void;\r\n  \r\n  export const subscribe = <T extends { type: string }>(\r\n    actionType: string | Array<string>,\r\n    worker: Worker<T>\r\n  ) => (next: any, dispatch?: any, getState?: () => any) =>\r\n    /**Exactly this is action handler will be called at middleware */\r\n    (action: T) => {\r\n      const isWatchedAction: boolean =\r\n        typeof actionType !== 'string'\r\n          ? actionType.indexOf(action.type) !== -1\r\n          : actionType === action.type;\r\n  \r\n      if (isWatchedAction) {\r\n        worker({ action, next, dispatch, getState });\r\n      } else {\r\n        next(action);\r\n      }\r\n    };","const { REACT_APP_URL, REACT_APP_APY_KEY } = process.env;\r\n\r\nexport const createUrl = (path: string, authRequired: boolean, token: string) => {\r\n  let url = REACT_APP_URL + path + `key=${REACT_APP_APY_KEY}`\r\n  if(authRequired && token) {\r\n    url = url + `&token=${token}`\r\n  }\r\n  return url\r\n}","import { ActionService } from \"./types\";\r\n\r\nconst INITIAL_STATE ={}\r\n\r\nexport interface ServiceState {}\r\n\r\nconst serviceReducer = (state: ServiceState = INITIAL_STATE, action: ActionService) => {\r\n    return state\r\n};\r\n\r\nexport default serviceReducer\r\n\r\n    \r\n","import { ActionService, ACTION_TYPES, RequestPayload } from \"./types\";\r\n\r\nexport const request = (p: RequestPayload): ActionService => ({\r\n    type: ACTION_TYPES.REQUEST,\r\n    ...p\r\n  });","export enum ACTION_TYPES {\r\n    SET_TOKEN = '@@AUTH/SET_TOKEN',\r\n    READ_TOKEN = '@@AUTH/READ_TOKEN',\r\n    LOGOUT= \"@@AUTH/LOGOUT\"\r\n}","import { ACTION_TYPES } from './types';\r\n\r\nconst INITIAL_STATE = {\r\n  token: ''\r\n};\r\n\r\nexport interface AuthState {\r\n  token: string;\r\n}\r\n\r\nconst authReducer = (state: AuthState = INITIAL_STATE, { type, payload }: any) => {\r\n  switch (type) {\r\n    case ACTION_TYPES.SET_TOKEN:\r\n      return { ...state, token: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer\r\n\r\n    \r\n","export enum ACTION_TYPES {\r\n    GET_USER_PROFILE=\"@@USER/GET_USER\",\r\n    SET_USER_PROFILE=\"@@USER/SET_USER\"\r\n}","import { ACTION_TYPES } from \"./types\";\r\n\r\nexport const setToken = (token: string) => ({\r\n    type: ACTION_TYPES.SET_TOKEN,\r\n    payload:token\r\n})\r\n\r\nexport const readToken = () => ({\r\n    type: ACTION_TYPES.READ_TOKEN,\r\n})\r\n\r\nexport const logOut = () => ({\r\n    type: ACTION_TYPES.LOGOUT\r\n})\r\n\r\n","import { AppState } from \"..\";\r\n\r\nexport const getToken = (state: AppState): string => state.auth.token;\r\nexport const isAuthenticated = (state: AppState) => !!state.auth.token","import { LOCATION_CHANGE } from \"connected-react-router\"\r\n\r\nexport const navigate = (url: string) => ({\r\n    type: LOCATION_CHANGE,\r\n    payload: {\r\n        location: {\r\n            pathname: url,\r\n        },\r\n        action: 'POP'\r\n    }\r\n\r\n})","import { connectRouter } from \"connected-react-router\";\r\nimport { History } from \"history\";\r\n\r\nexport default (history: History): any => (connectRouter(history))\r\nexport * from './actions'\r\nexport * from './selectors'","import { ROUTES_URLS } from \"../../components/App/routes\";\r\nimport { getFromLocalStorage, setToLocalStorage, subscribe } from \"../../utils\";\r\nimport { navigate } from \"../router\";\r\nimport { request } from \"../service\";\r\nimport { Action } from \"../types\";\r\nimport { setToken } from \"./actions\";\r\nimport { ACTION_TYPES } from \"./types\";\r\n\r\nconst APP_TOKEN = 'CUSTOM_APP_TOKEN'\r\n\r\nconst setTokenWorker = ({action, next, dispatch}: any)  => {\r\n  setToLocalStorage(APP_TOKEN, action.payload);\r\n  dispatch(navigate(ROUTES_URLS.DASHBOARD));\r\n  next(action)\r\n};\r\n\r\nconst readTokenWorker = ({action, next, dispatch}: any) => {\r\n  const token = getFromLocalStorage(APP_TOKEN);\r\n  if (token) {\r\n    dispatch(setToken(token));\r\n  }\r\n  next(action);\r\n}\r\n\r\nconst logOutWorker = ({ action, next, dispatch }: any) => {\r\n  dispatch(setToken(''));\r\n  dispatch(navigate(ROUTES_URLS.HOME));\r\n  next(action);\r\n};\r\n\r\n\r\nconst readTokenMiddleware =({dispatch}: any) => (next: any) => \r\n  subscribe(ACTION_TYPES.READ_TOKEN, readTokenWorker)(next, dispatch)\r\n\r\nconst setTokenMiddleware = ({dispatch} :any) => (next:any) => \r\nsubscribe(ACTION_TYPES.SET_TOKEN, setTokenWorker)(next, dispatch)\r\n\r\nconst logOutMiddleware = ({ dispatch }: any) => (next: any) =>\r\n  subscribe(ACTION_TYPES.LOGOUT, logOutWorker)(next, dispatch);\r\n  \r\nexport const authMiddlewares = [\r\n  setTokenMiddleware, \r\n  readTokenMiddleware,\r\n  logOutMiddleware\r\n];","export const setToLocalStorage = (key: string, data: string) => {\r\n    window.localStorage.setItem(key, data)\r\n}\r\nexport const getFromLocalStorage = (key: string) => {\r\n    return window.localStorage.getItem(key) \r\n}","import { createUrl, subscribe, Worker } from \"../../utils\";\r\nimport { getToken } from \"../auth\";\r\nimport { ActionService, ACTION_TYPES } from \"./types\";\r\n\r\n\r\nconst requestWorker: Worker<any> = async ({action, next, getState}) => {\r\n // const requestId = uuid()\r\n const {path,method, onSuccess,  authRequired} = action;\r\n  const appState = getState!()\r\n  const token = getToken(appState)\r\n\r\n const options: any = {\r\n   method,\r\n   headers: {\r\n     Accept: 'application/json','Content-Type': 'application/json'\r\n   }\r\n }\r\n const response = await fetch(createUrl(path, authRequired, token), options)\r\n if(response.status >= 400) {\r\n   console.log(\"errror\");\r\n   \r\n }\r\n const data = await response.json()\r\n onSuccess(data)\r\n\r\n};\r\n\r\nconst requestMiddleware = ({dispatch, getState}: any) => \r\n  (next: any) => \r\n  subscribe(ACTION_TYPES.REQUEST, requestWorker)(next, dispatch ,getState)\r\n\r\nexport const serviceMiddleware = [requestMiddleware]\r\n  \r\n\r\n\r\n\r\n\r\n","\r\nimport { subscribe } from \"../../utils\";\r\nimport { request } from \"../service\";\r\nimport { setBoards } from \"./actions\"\r\nimport {ACTION_TYPES} from './types'\r\n\r\nconst fetchBoardsWorker: any = ({dispatch}: {dispatch: any}) => {\r\n  dispatch(\r\n    request({\r\n      path: '/1/members/me/boards?',\r\n      authRequired: true,\r\n      onSuccess: data => {\r\n        console.log(data);\r\n        dispatch(setBoards(data));\r\n      },\r\n      onError: error => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  );\r\n};\r\n\r\nconst fetchMiddleware = ({ dispatch }: any) => (next: any) =>\r\n  subscribe(ACTION_TYPES.DATA_BOARD, fetchBoardsWorker)(next, dispatch);\r\n\r\nexport const boardsMiddleware = [fetchMiddleware];\r\n","import { ACTION_TYPES } from \"./types\"\r\n\r\nexport const getDataBoards = () => ({\r\n    type: ACTION_TYPES.DATA_BOARD,\r\n    \r\n})\r\n\r\nexport const setBoards = (data: Array<any>) => ({\r\n    type: ACTION_TYPES.SET_BOARDS,\r\n    payload:data\r\n    \r\n})","import * as React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ROUTES_URLS } from '../App/routes'\r\nimport styles from '../../styles/boardDetails.module.scss'\r\n\r\nexport interface boardProps   {\r\n    name: string,\r\n    prefs: any,\r\n    id: string,\r\n    backgroundColor: string\r\n}\r\n\r\nexport const Board = ({name, id, prefs}: boardProps) => {\r\n        console.log(id);\r\n        const boardStyles = {\r\n            backgroundColor: prefs.backgroundColor\r\n        }\r\n        \r\n        return <Link id={id} className={styles.link} to={`${ROUTES_URLS.BOARD_DETAILS}/${id}`}>\r\n            <div  className={styles.board} style={boardStyles}>{name}</div>\r\n        </Link>\r\n    \r\n}\r\n","import * as React from 'react';\r\nimport { RouteChildrenProps } from 'react-router';\r\nimport {connect} from 'react-redux'\r\nimport {AppState} from '../../store'\r\nimport {getBoards, getDataBoards} from '../../store/boards'\r\nimport { Board } from '../Board';\r\nimport styles from '../../styles/boardDetails.module.scss'\r\n\r\ninterface DashBoardProps extends RouteChildrenProps {\r\n    token?: string; \r\n    boards?: Array<any>;\r\n    getBoards?: () => void\r\n}\r\nclass DashBoard extends React.Component<DashBoardProps> { \r\n    componentDidMount() {\r\n       this.props.getBoards!()\r\n    }\r\n    render() {    \r\n        console.log(this.props.boards);\r\n        \r\n        return <div>\r\n                    <div className={styles.boardWrapp}>\r\n                        {this.props.boards!.map((item) => <Board key={item.id} {...item}/>)}\r\n                    </div>\r\n                    \r\n                </div> \r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {\r\n        boards: getBoards(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        getBoards: () => dispatch(getDataBoards())\r\n    }\r\n}\r\n\r\nconst ConnectDashboard = connect(mapStateToProps, mapDispatchToProps)(DashBoard)\r\n\r\nexport {ConnectDashboard as DashBoard}","\r\nimport * as React from 'react'\r\nimport { RouteChildrenProps } from \"react-router-dom\";\r\nexport const NotFound = (props: RouteChildrenProps) => {\r\n    return <h1>Not Found</h1>\r\n}","import { ACTION_TYPES } from \"./types\";\r\n\r\nexport interface UserState {\r\n    userParam: Array<any>\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    userParam: []\r\n}\r\n\r\nconst userReducer = (state: UserState = INITIAL_STATE, {type, payload}: any) => {\r\n    switch (type) {\r\n        case ACTION_TYPES.SET_USER_PROFILE:\r\n        return {...state, userParam: payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer","export enum ACTION_TYPES {\r\n    DATA_CARDS=\"@@CARDS/DATA_CARDS\",\r\n    SET_CARDS= \"@@CARDS/SET_CARDS\",\r\n    ADD_CARD= \"@@CARD/ADD_CARD\",\r\n    SUCCESS_ADDED_CARD= '@@CARD/SUCCESS_ADDED_CARD',\r\n    DELETE_CARD= \"@@CARD/DELETE_CARD\",\r\n    SUCCESS_DELETE_CARD= '@@CARD/SUCCESS_DELETE_CARD'\r\n}","import { ACTION_TYPES } from \"./types\"\r\n\r\nexport const getUserProfile = () => ({\r\n    type: ACTION_TYPES.GET_USER_PROFILE\r\n})\r\n\r\nexport const setUserProfile = (data: Array<any>) => ({\r\n    type: ACTION_TYPES.SET_USER_PROFILE,\r\n    payload: data\r\n})","import { AppState } from \"..\";\r\n\r\nexport const getUser = (state: AppState): Array<any> => state.user.userParam","import { getToken } from \"../auth\";\r\nimport { setUserProfile } from \"./actions\";\r\nimport { ACTION_TYPES } from \"./types\";\r\nconst { REACT_APP_APY_KEY } = process.env;\r\n\r\n\r\nconst getUserUrl = (token: string) => {\r\n    return `https://api.trello.com/1/members/me?key=${REACT_APP_APY_KEY}&token=${token}`\r\n}\r\n\r\nconst fetchDataUser: any = async ({dispatch, state}: {dispatch:any, state:any}) => {\r\n    const token = getToken(state)\r\n    const response = await fetch(getUserUrl(token))\r\n    if(response.ok === true && response.status === 200) {\r\n        const data = await response.json();\r\n        console.log('user',data)\r\n        dispatch(setUserProfile(data))\r\n        \r\n    } else {\r\n        throw Error('errror')\r\n    }\r\n}\r\n\r\nconst userMiddleware = ({ dispatch, getState}: any) => (next:any) => (action:any) => {\r\n    const state = getState()\r\n    if (action.type === ACTION_TYPES.GET_USER_PROFILE) {\r\n        fetchDataUser({dispatch, state})\r\n    } else {\r\n      next(action)\r\n    }\r\n   \r\n}\r\n\r\nexport const userProfileMiddleware = [userMiddleware]\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { RouteChildrenProps } from 'react-router-dom';\r\nimport { AppState } from '../../store';\r\nimport { getUser, getUserProfile } from '../../store/userProfile';\r\n\r\ninterface UserPageProps extends RouteChildrenProps{\r\n    UserParam?: any\r\n    getUser?: () => void\r\n}\r\n\r\nclass UserPage extends React.Component<UserPageProps> {\r\n    componentDidMount() {\r\n        this.props.getUser!()\r\n    }\r\n\r\n    render() {\r\n        const {fullName, initials, username} = this.props.UserParam\r\n        return <div>\r\n            <div>{fullName}</div>\r\n            <div>{initials}</div>\r\n            <div>{username}</div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {\r\n        UserParam: getUser(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        getUser: () => dispatch(getUserProfile())\r\n    }\r\n}\r\n\r\nconst ConnectUser = connect(mapStateToProps,mapDispatchToProps)(UserPage)\r\n\r\nexport {ConnectUser as UserPage}\r\n","export enum ACTION_TYPES {\r\n    DATALISTS=\"@@LISTS/DATA_LISTS\",\r\n    SET_LISTS= \"@@LISTS/SET_LISTS\"\r\n}","import { ACTION_TYPES } from './types';\r\nimport {v4 as uuidv4} from 'uuid';\r\nexport interface CardsState {\r\n  cards: Array<any>;\r\n}\r\nconst INITIAL_STATE = {\r\n  cards: []\r\n};\r\n\r\n\r\n\r\nconst cardsReducer = (state: CardsState = INITIAL_STATE, { type, payload }: any) => {\r\n  switch (type) {\r\n    case ACTION_TYPES.SET_CARDS:\r\n      return { ...state, cards: payload };\r\n\r\n    case ACTION_TYPES.SUCCESS_ADDED_CARD: \r\n      const newItem = {\r\n        name:payload.name, \r\n        idList:payload.idList,\r\n        id:uuidv4()\r\n      }\r\n      return{...state, cards: [...state.cards, newItem]}\r\n\r\n    case ACTION_TYPES.SUCCESS_DELETE_CARD:\r\n      return {...state, cards: state.cards.filter((el) => {\r\n        return el.id !== payload.id;\r\n      })}\r\n      \r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardsReducer","import { AppState } from \"..\";\r\n\r\nexport const getCards = (state: AppState) : Array<any> => state.cards.cards\r\n\r\n","\r\n\r\nimport { subscribe } from \"../../utils\";\r\nimport { getToken } from \"../auth\";\r\nimport { request } from \"../service\";\r\nimport { setCards, successAddedCard, successDeletedCard } from \"./actions\";\r\nimport {ACTION_TYPES} from './types'\r\nconst { REACT_APP_APY_KEY } = process.env;\r\n\r\nconst fetchCardsWorker: any = ({dispatch, action}:  {dispatch: any, action: {type: string; payload: string}}) => {\r\n  const id = action.payload\r\n  return dispatch(\r\n    request({\r\n      path: `/1/boards/${id}/cards?`,\r\n      // method:'GET',\r\n      authRequired: true,\r\n      onSuccess: data => {\r\n        console.log(\"cards\", data);\r\n        dispatch(setCards(data));\r\n      },\r\n      onError: error => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  );\r\n};\r\n\r\nconst deleteCardWorker: any = ({dispatch, action}:  {dispatch: any, action: {type: string; payload: string}}) => {\r\n  console.log('deleteCardAction', action);\r\n  const id = action.payload\r\n  return dispatch(\r\n    request({\r\n      path: `/1/cards/${id}?`,\r\n      method:'DELETE',\r\n      authRequired: true,\r\n      onSuccess: req => {\r\n        console.log(\"delete\", id);\r\n        dispatch(successDeletedCard({id}));\r\n      },\r\n      onError: error => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  );\r\n\r\n};\r\n\r\nconst addCardWorker:any = ({dispatch, action, getState} :  {dispatch: any, action:any, getState:any}) => {\r\n  console.log(\"addCardAction\",action);\r\n\r\n  const appState = getState!()\r\n  const token = getToken(appState)\r\n  \r\n  const idList = action.payload.idList\r\n  const name = action.payload.name\r\n  \r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ name: name, idList:idList })\r\n  };\r\n  \r\n  fetch(`https://api.trello.com/1/cards?key=${REACT_APP_APY_KEY}&token=${token}&idList=${idList}`, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => dispatch(successAddedCard(data))\r\n      );\r\n  }\r\n\r\nconst fetchMiddleware = ({ dispatch, getState }: any) => (next: any) =>\r\n  subscribe(ACTION_TYPES.DATA_CARDS, fetchCardsWorker)(next, dispatch, getState);\r\n\r\nconst deleteCardMiddleware = ({ dispatch, getState }: any) => (next: any) =>\r\n  subscribe(ACTION_TYPES.DELETE_CARD, deleteCardWorker)(next, dispatch, getState);\r\n\r\nconst addCardMiddleware = ({dispatch, getState}:any) => (next:any) =>\r\n  subscribe(ACTION_TYPES.ADD_CARD, addCardWorker)(next, dispatch, getState)\r\n\r\nexport const cardsMiddleware = [fetchMiddleware, addCardMiddleware, deleteCardMiddleware];\r\n","import { ACTION_TYPES } from \"./types\"\r\n\r\nexport const getDataCards = (id: string) => ({\r\n    type: ACTION_TYPES.DATA_CARDS,\r\n    payload: id \r\n})\r\n\r\nexport const setCards = (data: Array<any>) => ({\r\n    type: ACTION_TYPES.SET_CARDS,\r\n    payload:data\r\n})\r\n\r\nexport const addCard = (data:any) => ({\r\n    type:ACTION_TYPES.ADD_CARD,\r\n    payload:data\r\n})\r\n\r\nexport const successAddedCard = (data:any) => ({\r\n    type:ACTION_TYPES.SUCCESS_ADDED_CARD,\r\n    payload:data\r\n})\r\n\r\nexport const deleteCard = (id:string) => ({\r\n    type:ACTION_TYPES.DELETE_CARD,\r\n    payload:id\r\n})\r\n\r\nexport const successDeletedCard = (id:any) => ({\r\n    type:ACTION_TYPES.SUCCESS_DELETE_CARD,\r\n    payload:id\r\n})\r\n\r\n\r\n\r\n","import { ACTION_TYPES } from './types';\r\n\r\nexport interface ListsState {\r\n  lists: Array<any>;\r\n}\r\nconst INITIAL_STATE = {\r\n  lists: []\r\n};\r\n\r\n\r\n\r\nconst listsReducer = (state: ListsState = INITIAL_STATE, { type, payload }: any) => {\r\n  switch (type) {\r\n    case ACTION_TYPES.SET_LISTS:\r\n      return { ...state, lists: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listsReducer","import * as React from 'react'\r\nimport { Login } from '../Login'\r\nimport { DashBoard } from '../Dashboard'\r\nimport { NotFound } from '../NotFound'\r\nimport {Redirect, RouteChildrenProps} from 'react-router-dom'\r\nimport { OAuth } from '../OAuth'\r\nimport { UserPage } from '../UserPage'\r\nimport { BoardDetails } from '../BoardDetails'\r\nimport { Board } from '../Board'\r\n\r\nexport enum ROUTES_URLS {\r\n    LOGIN = '/login',\r\n    DASHBOARD = '/dashboard',\r\n    OAUTH = '/oauth',\r\n    NOT_FOUND = '/404',\r\n    HOME = '/',\r\n    USER_PAGE = '/user',\r\n    BOARD_DETAILS = '/board'\r\n\r\n}\r\n \r\nexport interface AppRoute {\r\n    path: ROUTES_URLS,\r\n    render: (props: any) => any,\r\n    title?: string,\r\n    isHidden?: boolean,\r\n    exact?: boolean\r\n    isProtected?: boolean\r\n}\r\n\r\nexport const routes: Array<AppRoute> = [\r\n    {\r\n        path: ROUTES_URLS.LOGIN,\r\n        render: (props: any) => <Login {...props}/>,\r\n        title: 'Login',\r\n        isHidden:true\r\n    },\r\n    {\r\n        path: ROUTES_URLS.DASHBOARD,\r\n        render: (props: RouteChildrenProps) => <DashBoard {...props}/>,\r\n        title: 'Dashboard',\r\n        isProtected: true\r\n    },\r\n    {\r\n        path: ROUTES_URLS.USER_PAGE,\r\n        render: (props: RouteChildrenProps) => <UserPage {...props}/>,\r\n        title: 'UserPage',\r\n        isProtected: true,\r\n        isHidden:true\r\n        \r\n    },\r\n    {\r\n        path: `${ROUTES_URLS.BOARD_DETAILS}/:id` as any,\r\n        render: (props: RouteChildrenProps<{id: string}>) => <BoardDetails {...props}/>,\r\n        title: 'BoardDetails',\r\n        isProtected: true,\r\n        isHidden:true\r\n    },\r\n    {\r\n        path: ROUTES_URLS.HOME,\r\n        render: () => <Redirect to={ROUTES_URLS.LOGIN}/>,\r\n        isHidden: true,\r\n        exact: true\r\n    },\r\n    {\r\n        path: ROUTES_URLS.NOT_FOUND,\r\n        render: (props: RouteChildrenProps) => <NotFound {...props}/>,\r\n        isHidden: true,\r\n    },\r\n    \r\n]","import { AppState } from \"..\";\r\n\r\nexport const getLists = (state: AppState) : Array<any> => state.lists.lists\r\n","import { subscribe } from \"../../utils\";\r\nimport { request } from \"../service\";\r\nimport { setLists } from \"./actions\";\r\nimport {ACTION_TYPES} from './types'\r\n\r\nconst fetchListsWorker: any = ({dispatch, action}: {dispatch: any, action: {type: string; payload: string}  }) => {\r\n  const id = action.payload\r\n  return dispatch(\r\n    request({\r\n      path: `/1/boards/${id}/lists?`,\r\n      authRequired: true,\r\n      onSuccess: data => {\r\n        console.log(\"lists\",data);\r\n        dispatch(setLists(data));\r\n      },\r\n      onError: error => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  );\r\n};\r\n\r\nconst fetchMiddleware = ({ dispatch }: any) => (next: any) =>\r\n  subscribe(ACTION_TYPES.DATALISTS, fetchListsWorker)(next, dispatch);\r\n\r\nexport const listsMiddleware = [fetchMiddleware];\r\n","import { ACTION_TYPES } from \"./types\"\r\n\r\nexport const getDataLists = (id: string) => ({\r\n    type: ACTION_TYPES.DATALISTS,\r\n    payload: id\r\n})\r\n\r\nexport const setLists = (data: Array<any>) => ({\r\n    type: ACTION_TYPES.SET_LISTS,\r\n    payload:data\r\n    \r\n})","import React from 'react';\r\nimport styles from '../../styles/boardDetails.module.scss'\r\nimport  '../../styles/boardDetails.module.scss'\r\nimport { RouteChildrenProps } from 'react-router';\r\n\r\n\r\ninterface FormProps extends RouteChildrenProps  {\r\n    handleSubmit:(text:string, id:any) =>void\r\n    id?:any\r\n}\r\n\r\ninterface FormState {\r\n    activeForm?:boolean\r\n    name?:string,\r\n    e?:any, \r\n}\r\n\r\nexport class AddCardForm extends React.Component<FormProps,FormState> {\r\n    state = {\r\n        activeForm: false,\r\n        name:''\r\n    }\r\n    onFormChange = () => {\r\n        this.setState(({activeForm}:any) => {\r\n                         return {\r\n                            activeForm: !activeForm\r\n                         }\r\n                   })    \r\n    }\r\n    onChange = (e: any) => {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n        console.log(this.state.name);\r\n        \r\n      };\r\n    onSubmitForm = (e:any, id:any) => {\r\n        e.preventDefault();\r\n        this.props.handleSubmit(this.state.name, id)\r\n        this.setState({name: ''})\r\n    }\r\n    \r\n    render() {\r\n        const {id} = this.props\r\n        return  <div className=\"add-card\" >\r\n            {this.state.activeForm ? \r\n            <form className={styles.form} \r\n                    onSubmit={(e:any)=>\r\n                    this.onSubmitForm(e,id)}>\r\n                <textarea \r\n                    className={styles.textarea} \r\n                    name=\"text\"\r\n                    placeholder=\"Ввести заголовок для этой карточки\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.name}\r\n                />\r\n                \r\n            <div className={styles.btnWrapper}>\r\n                <button type='submit' \r\n                        className={styles.submitBtn}>Добавить карточку\r\n                </button>\r\n                <button onClick={this.onFormChange} \r\n                        className={styles.closeBtn}>X\r\n                </button>\r\n            </div>\r\n            </form>:<button onClick={this.onFormChange} \r\n                            className={styles.addCardBtn}>+ Добавить еще одну карточку\r\n                    </button>\r\n            }\r\n\r\n    </div>   \r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styles from '../../styles/boardDetails.module.scss'\r\ninterface CardProps {\r\n   dataCard:any\r\n   onDelete: (id:string) => void\r\n   \r\n}\r\n\r\nexport const Card =({dataCard, onDelete}:CardProps) => {\r\n    const {name, id} = dataCard\r\n    return (\r\n        <div className={styles.card}>{name}\r\n            <button  onClick={()=>onDelete(id)}\r\n                    className={styles.deleteBtn}>X</button>\r\n        </div>\r\n    )\r\n    \r\n}","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { RouteChildrenProps } from 'react-router-dom'\r\nimport { AppState } from '../../store'\r\nimport { getDataCards, getCards, deleteCard, addCard } from '../../store/cards'\r\nimport { getDataLists, getLists } from '../../store/lists'\r\nimport styles from '../../styles/boardDetails.module.scss'\r\nimport { AddCardForm } from '../AddCardForm'\r\nimport { Card } from '../Card'\r\n\r\ninterface ListsProps extends RouteChildrenProps<{ id: string }> {\r\n    lists?: Array<any>\r\n    cards?: Array<any>\r\n    getLists?: (id?: string) => void\r\n    getCards?: (id?: string) => void\r\n    deleteCard: (id: string) => void\r\n    addCard: (data: any) => void\r\n}\r\ntype cardData = {\r\n    name: string,\r\n    idList:string\r\n}\r\n\r\nclass BoardDetails extends React.Component<ListsProps> {\r\n\r\n    componentDidMount() {\r\n        this.props.getLists!(this.props.match?.params.id)\r\n        this.props.getCards!(this.props.match?.params.id)\r\n\r\n    }\r\n\r\n    onDelete = (id: string) => {\r\n        this.props.deleteCard(id)\r\n\r\n    }\r\n\r\n    handleSubmit = (name: string, idList: any) => {\r\n        this.props.addCard({ name, idList })\r\n\r\n    }\r\n    render() {\r\n        \r\n        const { cards, lists } = this.props;\r\n        return <div className={styles.boardDetails}>\r\n            <div className={styles.wrapper}>\r\n                {\r\n                    lists!.map((list) => {\r\n                        return <div key={list.id} className={styles.list}>\r\n                            <h3>{list.name}</h3>\r\n                            <div className=\"card-wrapper\">\r\n                                {cards!.map((card) => {\r\n                                    if (list.id === card.idList) {\r\n                                        return <Card key={card.id}\r\n                                            dataCard={card}\r\n                                            onDelete={(id:string) => this.onDelete(id)}\r\n                                        />\r\n                                    }\r\n                                })}\r\n                            </div>\r\n                            <AddCardForm {...list}\r\n                                handleSubmit={(text: string, id: any) =>\r\n                                    this.handleSubmit(text, id)}\r\n                            />\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {\r\n        lists: getLists(state),\r\n        cards: getCards(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        getLists: (id?: string) => dispatch(getDataLists(id as any)),\r\n        getCards: (id?: string) => dispatch(getDataCards(id as any)),\r\n        deleteCard: (id: string) => dispatch(deleteCard(id)),\r\n        addCard: (data: cardData) => dispatch(addCard(data as cardData))\r\n\r\n    }\r\n}\r\n\r\nconst ConnectLists = connect(mapStateToProps, mapDispatchToProps)(BoardDetails)\r\n\r\nexport { ConnectLists as BoardDetails }\r\n","export enum ACTION_TYPES {\r\n    INCREASE_COUNT= '@@COUNTER/INCREASE_COUNT',\r\n    DECREASE_COUNT= \"@@COUNTER/DECREASE_COUNT\"\r\n}","import React, { FunctionComponent } from 'react';\r\n\r\nimport { Link } from './Link';\r\nimport { routes, AppRoute } from '../App/routes';\r\nimport styles from '../../styles/app.module.scss';\r\nimport { logOut } from '../../store/auth';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface headerProps {\r\n  onLogOut: () => void;\r\n}\r\n\r\nconst Header: FunctionComponent<headerProps> = ({ onLogOut }: headerProps) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <div>\r\n        {routes.map(({ title, path, isHidden }: AppRoute, i: number) =>\r\n          isHidden ? null : (\r\n            <Link key={i} title={title} path={path}/>\r\n          )\r\n        )}\r\n        {/* <Link title={'OAUTH'} path={'/oauth'} /> */}\r\n        <button onClick={onLogOut}>Log out</button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any): headerProps => {\r\n  return {\r\n    onLogOut: () => dispatch(logOut())\r\n  };\r\n};\r\n\r\nconst ConnectedHeader = connect(undefined, mapDispatchToProps)(Header);\r\n\r\nexport {ConnectedHeader as Header}","import React, { FunctionComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteChildrenProps, Redirect } from \"react-router\";\r\nimport { setToken } from \"../../store/auth\";\r\nimport { ROUTES_URLS } from \"../App/routes\";\r\n\r\ninterface OAuthProps extends RouteChildrenProps {\r\n  onSetToken?: (token: string) => void;\r\n}\r\n\r\nconst OAuth: FunctionComponent<OAuthProps> = ({ location: { hash }, onSetToken }: OAuthProps) => {\r\n  const token = hash.split('=')[1];\r\n  onSetToken && onSetToken(token);\r\n  return <Redirect to={ROUTES_URLS.DASHBOARD} />\r\n}\r\n\r\nconst mapDispathToProps = (dispatch: any) => {\r\n  return {\r\n    onSetToken: (token: string) => dispatch(setToken(token))\r\n  }\r\n}\r\n\r\nconst ConnectedOAuth = connect(undefined, mapDispathToProps)(OAuth)\r\n\r\nexport {ConnectedOAuth as OAuth}\r\n\r\n","import React, { FunctionComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route, RouteComponentProps, RouteProps,  } from 'react-router-dom';\r\nimport { AppState } from '../../store';\r\nimport { isAuthenticated } from '../../store/auth';\r\n\r\n\r\ninterface ProtectedRouteProps extends RouteProps {\r\n  isAuthenticated?: boolean\r\n    \r\n    \r\n}\r\n\r\nconst ProtectedRoute: FunctionComponent<ProtectedRouteProps> = ({ render, isAuthenticated, ...rest}) => {\r\n    \r\n  return (\r\n        <Route\r\n          {...rest}\r\n          render={(routeCompProps: RouteComponentProps) =>\r\n          isAuthenticated ? (\r\n            render!(routeCompProps)\r\n            ) : (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/login\",\r\n                  state: { from: routeCompProps.location }\r\n                }}\r\n              />\r\n            )\r\n          }\r\n        />\r\n      );\r\n}\r\n\r\nconst mapStateToProps= (state: AppState) => {\r\n  return {\r\n    isAuthenticated: isAuthenticated(state)\r\n  }\r\n}\r\n\r\nconst ConnectedRoute = connect(mapStateToProps)(ProtectedRoute)\r\nexport {ConnectedRoute as ProtectedRoute};","import * as React from 'react'\r\nimport { Header } from '../Header';\r\nimport { OAuth } from '../OAuth';\r\nimport { ProtectedRoute } from '../ProtectedRoute';\r\nimport { AppRoute, routes, ROUTES_URLS, } from './routes';\r\n\r\nimport { Route, Switch, Redirect, RouteChildrenProps, withRouter, RouteComponentProps } from 'react-router-dom'\r\n\r\nimport '../../styles/bace.scss'\r\nimport styles from '../../styles/app.module.scss';\r\n\r\n\r\n\r\nexport interface Board {\r\n    id: string;\r\n    name: string;\r\n    pinned: boolean;\r\n    desc?: string;\r\n}\r\n\r\ninterface AppState {\r\n    token: string\r\n    boards: Array<Board>\r\n    userProfile: any\r\n}\r\n\r\ninterface AppProps  { }\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    token: '',\r\n    boards: [],\r\n    userProfile: undefined,\r\n    \r\n}\r\n\r\nclass App extends React.Component<AppProps, AppState> {\r\n    public state = INITIAL_STATE;\r\n\r\n\r\n    private renderContent() {\r\n        return <main className={styles.main}>\r\n            <Switch>\r\n                {routes.map(this.renderRoute)}\r\n                <Route path={ROUTES_URLS.OAUTH} render={(props: RouteChildrenProps) => <OAuth {...props} />} />\r\n                <Redirect to={ROUTES_URLS.NOT_FOUND}/>     \r\n            </Switch>        \r\n        </main>\r\n        \r\n    }\r\n\r\n    private renderRoute = (route: AppRoute, i: number) =>{\r\n        if(route.isProtected) {\r\n            return <ProtectedRoute \r\n                    exact={route.exact} \r\n                    key={i} \r\n                    path={route.path} \r\n                    render={route.render} \r\n                    \r\n                    />   \r\n        } else {\r\n            return <Route \r\n                    exact={route.exact} \r\n                    key={i} \r\n                    path={route.path} \r\n                    render={(props) => route.render({...props})}/>\r\n        }\r\n    }\r\n\r\n    public render() {  \r\n        return(\r\n            <div className=\"page\">\r\n                \r\n                <Header />\r\n                {this.renderContent()}   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport {App} ;","import { ACTION_TYPES } from \"./types\";\r\n\r\nexport interface CounterState {\r\n    count: number\r\n}\r\n\r\nexport const INITIAL_STATE = {\r\n    count: 0\r\n}\r\n\r\nconst redu  = (state: CounterState = INITIAL_STATE, {type}: any) => {\r\n    switch(type) {\r\n        case ACTION_TYPES.INCREASE_COUNT:\r\n            return {...state, count: state.count + 1};\r\n        case ACTION_TYPES.DECREASE_COUNT:\r\n            return {...state, count: state.count -1};\r\n        default: \r\n           return state;\r\n    }\r\n}\r\n\r\nexport default redu","export enum ACTION_TYPES {\r\n  INIT = '@@INIT/APP',\r\n  START = '@@INIT/START',\r\n  END = '@@INIT/END',\r\n  RESET = '@@INIT/RESET'\r\n}\r\n","import {v4 as uuidv4} from 'uuid';\r\n\r\nimport { ACTION_TYPES } from './types';\r\n\r\nexport interface InitState {\r\n  sessionId?: string\r\n}\r\n\r\nexport default function (state: InitState = {}, action: any) {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.START:\r\n      return {};\r\n    case ACTION_TYPES.END:\r\n      return {\r\n        sessionId: uuidv4(),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import { ACTION_TYPES } from './types';\r\nimport { initEnd, initStart } from './actions';\r\nimport { subscribe } from '../../utils/redux';\r\nimport { readToken } from '../auth';\r\n\r\nconst initWorker = ({ action, dispatch, next }: any) => {\r\n  dispatch(initStart());\r\n  dispatch(readToken());\r\n  dispatch(initEnd());\r\n  next(action);\r\n};\r\n\r\nconst init = ({ dispatch }: any) => (next: any) =>\r\n  subscribe(ACTION_TYPES.INIT, initWorker)(next, dispatch);\r\nexport const initMiddleware = [init];\r\n","import { ACTION_TYPES } from './types';\r\n\r\nexport const init = () => ({\r\n  type: ACTION_TYPES.INIT,\r\n});\r\n\r\nexport const initStart = () => ({\r\n  type: ACTION_TYPES.START,\r\n});\r\n\r\nexport const initEnd = () => ({\r\n  type: ACTION_TYPES.END,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET,\r\n});\r\n","import { combineReducers, compose, createStore, applyMiddleware } from 'redux';\r\nimport counter, { CounterState } from './counter';\r\nimport auth, { AuthState, authMiddlewares } from './auth';\r\nimport boards, { boardsMiddleware } from './boards';\r\nimport user,{ userProfileMiddleware } from './userProfile';\r\nimport service, { serviceMiddleware, ServiceState } from './service';\r\nimport { initMiddleware } from './initialization';\r\nimport connectRouter from './router';\r\nimport { History } from 'history';\r\nimport lists, { listsMiddleware } from './lists';\r\nimport cards, { cardsMiddleware } from './cards';\r\n\r\nexport interface AppState {\r\n  counter: CounterState;\r\n  auth: AuthState;\r\n  boards?: any;\r\n  user?: any;\r\n  service: ServiceState;\r\n  router?: any;\r\n  lists?: any\r\n  cards?: any\r\n}\r\n\r\n// @ts-ignore\r\nconst t = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== 'production' && t ? t : compose;\r\n\r\nexport default function configureStore(history: History) {\r\n  const rootReducer = combineReducers<AppState>({\r\n      router: connectRouter(history),\r\n      counter,\r\n      auth,\r\n      boards,\r\n      user,\r\n      service,\r\n      lists,\r\n      cards\r\n  });\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    undefined,\r\n    composeEnhancers(applyMiddleware(\r\n      ...authMiddlewares, \r\n      ...boardsMiddleware, \r\n      ...userProfileMiddleware, \r\n      ...serviceMiddleware, \r\n      ...initMiddleware,\r\n      ...listsMiddleware,\r\n      ...cardsMiddleware\r\n      ))\r\n  );\r\n}\r\n\r\nexport * from './counter'\r\n\r\n\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom'\r\nimport {App} from './components/App/'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\n\r\nimport {Provider} from 'react-redux'\r\nimport configureStore from './store';\r\nimport { createBrowserHistory } from 'history';\r\nimport { init } from './store/initialization';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\n\r\n\r\n\r\n\r\nconst history = createBrowserHistory()\r\nconst store = configureStore(history)\r\nstore.dispatch(init())\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n            <App />\r\n        </ConnectedRouter>\r\n    </Provider>, document.querySelector('#root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boardDetails\":\"boardDetails_boardDetails__133Ck\",\"wrapper\":\"boardDetails_wrapper__1V-8P\",\"link\":\"boardDetails_link__2PRzq\",\"boardWrapp\":\"boardDetails_boardWrapp__2bRk5\",\"board\":\"boardDetails_board__1LBK3\",\"list\":\"boardDetails_list__2KwPB\",\"card\":\"boardDetails_card__bMezW\",\"addCardBtn\":\"boardDetails_addCardBtn__3qjhN\",\"textarea\":\"boardDetails_textarea__y3wco\",\"btnWrapper\":\"boardDetails_btnWrapper__NedwO\",\"submitBtn\":\"boardDetails_submitBtn__qS05y\",\"deleteBtn\":\"boardDetails_deleteBtn__2oPXa\"};"],"sourceRoot":""}